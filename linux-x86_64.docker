# ========================================
# Qt5 with Qbs build environment for Linux
# ========================================

FROM rweickelt/qbs:1.10.1 as build-environment

RUN apt-get update -qq \
    && apt-get install -qq -y --no-install-recommends \
        autoconf \
        automake \
        autopoint \
        binutils \
        bison \
        build-essential \
        ca-certificates \
        flex \
        git \
        intltool \
        libgdk-pixbuf2.0-dev \
        libffi-dev \
        libgmp-dev \
        libmpc-dev \
        libmpfr-dev \
        libtool \
        libtool-bin \
        libz-dev \
        openssl \
        patch \
        pkg-config \
        p7zip-full \
        texinfo \
        xz-utils \
        wget

# Preapre and download cross development environment
RUN mkdir -p /qt/build

WORKDIR  /qt
RUN git clone https://github.com/rweickelt/qt5.git -b qst-qt-5.14 --depth 1 source

WORKDIR /qt/source
RUN git submodule update --init -- qtbase qtdeclarative qtserialport

WORKDIR  /qt/build
RUN ../source/configure \
        -prefix /opt/qt5-linux-x86_64 \
        -release \
        -shared \
        -opensource \
        -confirm-license \
        -nomake examples \
        -nomake tests \
        -platform linux-g++-64 \
        -qt-pcre -no-icu -no-glib -no-sql-sqlite -no-cups -no-dbus \
        -no-pch -no-sql-odbc -no-qml-debug -qt-zlib \
        -no-gui -no-freetype -no-gif -no-libpng -no-libjpeg -no-harfbuzz -no-feature-accessibility -no-opengl -no-iconv -no-xcb -no-sm \
        -skip qtactiveqt \
        -skip qt3d \
        -skip qtcanvas3d \
        -skip qtcharts \
        -skip qtconnectivity \
        -skip qtgamepad \
        -skip qtgraphicaleffects \
        -skip qtimageformats \
        -skip qtlocation \
        -skip qtmultimedia \
        -skip qtquickcontrols \
        -skip qtquickcontrols2 \
        -skip qtpurchasing \
        -skip qtscript \
        -skip qtscxml \
        -skip qtsensors \
        -skip qtserialbus \
        -skip qtspeech \
        -skip qtsvg \
        -skip qtwayland \
        -skip qtvirtualkeyboard \
        -skip qtwebchannel \
        -skip qtwebengine \
        -skip qtwebview

# Build Qt. Make will always exit with 2 because it expects gui enabled
# which is not the case.
RUN make -j $(nproc --all) | stdbuf -o0 tr -cd '\n' | stdbuf -o0 tr '\n' '.' && \
    make install

# A simple test to see if the Qt installation works
COPY test /qt/test
WORKDIR /qt/test
RUN /opt/qt5-linux-x86_64/bin/qmake hello-world.pro \
    && make

# ======================================
# The final image without build packages
# ======================================

FROM rweickelt/qbs:1.10.1

#
# Allow colored output on command line.
#
ENV TERM=xterm-color

#
# Make it possible to change the user in the entrypoint script.
# The docker container usually runs as root user. This usually causes permission
# problems on files created during build in the project directory.
# Thus we create a user here who's UID will be changed in the entrypoint
# script to match the UID of the current host user.
#
ARG USER_UID=1000
ARG USER_NAME=devel
RUN apt-get update && apt-get install -y gosu && \
    groupadd -g ${USER_UID} ${USER_NAME} && \
    useradd -s /bin/bash -u ${USER_UID} -g ${USER_NAME} -o -c "" -m ${USER_NAME}
COPY entrypoint.sh entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

#
# Import qt build artifacts
#
COPY --from=build-environment /opt/qt5-linux-x86_64 /opt/qt5-linux-x86_64
ENV PATH="/opt/qt5-linux-x86_64/bin:${PATH}"

USER $USER_NAME
RUN qbs setup-toolchains --detect \
    && qbs setup-qt /opt/qt5-linux-x86_64/bin/qmake qt5 \
    && qbs config defaultProfile qt5 \
    && qbs config profiles.qt5.qbs.architecture x86_64

#
# Switch back to root user for the entrypoint script.
#
USER root
